@page "/Incomes"
@using BlazorApp.Client.Shared.Dialogs
@using BlazorApp.Shared.Models
@using Blazored.LocalStorage
@inject ILocalStorageService localStorage
@inject IDialogService Dialog

@foreach (var income in AllIncomes)
{
    <MudCard Class="mt-4 mb-4">
        <MudCardHeader>
            <CardHeaderAvatar>
                <MudAvatar Color="Color.Default" Variant="Variant.Filled">
                    <MudIcon Style="@($"color:{Colors.Green.Lighten5};")" Icon="@Icons.Material.Outlined.Lightbulb" Size="Size.Large" />
                </MudAvatar>
            </CardHeaderAvatar>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@income.Name</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                    <MudMenuItem>Edit</MudMenuItem>
                    <MudMenuItem>Delete</MudMenuItem>
                </MudMenu>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudText Typo="Typo.body2">$@income.Amount</MudText>
        </MudCardContent>
    </MudCard>
}
<MudFab Color="Color.Primary"
        StartIcon="@Icons.Material.Filled.Add"
        Style="position:fixed;bottom:50px;right:50px"
        Size="Size.Large"
        OnClick="AddBill" />
<MudSpacer />
@code {

    public List<Income> AllIncomes { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (!await localStorage.ContainKeyAsync("incomes"))
            await localStorage.SetItemAsync<List<Income>>("incomes", AllIncomes);
        AllIncomes = await localStorage.GetItemAsync<List<Income>>("incomes");
    }
    private async Task AddBill()
    {
        var dialog = Dialog.Show<AddIncomeDialog>("Add New Income");
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            AllIncomes.Add((Income)result.Data);
            await localStorage.SetItemAsync<List<Income>>("incomes", AllIncomes);
        }

    }
}
